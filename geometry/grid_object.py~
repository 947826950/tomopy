# -*- coding: utf-8 -*-
# Filename: grid_object.py
""" Module for spatial referencing of objects in 3-D space.
"""
from abc import ABCMeta, abstractmethod

# Grid object definiton.
class GridObject(object):
    """Abstract spatial referencing for unit objects.

    Attributes
    ----------
    num_pixels : ndarray
        Number of discretization of the object.

    limits : ndarray
        Minimum and maximum coordinate values in each dimension.

    pixel_size : ndarray
        Size of the pixels.
    """
    __metaclass__ = ABCMeta

    @abstractmethod
    def axes_coords(self):
        """ Returns the spatial coordinates of the points
        on the grid in X and Y dimensions.

        Returns
        -------
        coordx : ndarray
            Spatial coordinates in X dimension.

        coordy : ndarray
            Spatial coordinates in Y dimension.
        """
        pass

    @abstractmethod
    def pixel_coords(self):
        """ Returns the complete set of points in the grid.

        Returns
        -------
        out : ndarray
            Point array on the grid.
        """
        pass

    @abstractmethod
    def overlap(self):
        """ Returns a boolean mask array for if the
        points given by ``point`` are inside or outside
        the object boundaries.

        Parameters
        ----------
        point : ndarray
            Input points.

        Returns
        -------
        out : bool ndarray
            A boolean mask array. The coefficients
            are ``True`` corresponding to the points
            inside and ``False`` for points outside
            of the grid object boundaries.
        """
        pass
